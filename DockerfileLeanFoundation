#
#   LEAN Foundation Docker Container 20190708
#   Cross platform deployment for multiple brokerages
#   Intended to be used in conjunction with Dockerfile. This is just the foundation common OS+Dependencies required.
#

# Use base system for cleaning up wayward processes
FROM phusion/baseimage:0.9.22

MAINTAINER QuantConnect <contact@quantconnect.com>

# Use baseimage-docker's init system.
CMD ["/sbin/my_init"]

# Have to add env TZ=UTC. See https://github.com/dotnet/coreclr/issues/602
RUN env TZ=UTC

# Install OS Packages:
# Misc tools for running Python.NET and IB inside a headless container.
RUN apt-get update && apt-get install -y git bzip2 unzip wget python3-pip python-opengl zlib1g-dev && \
    apt-get install -y clang cmake curl xvfb libxrender1 libxtst6 libxi6 libglib2.0-dev libopenmpi-dev && \
# Install R
    apt-get install -y r-base pandoc libcurl4-openssl-dev

# Java for running IB inside container:
RUN apt-get install -y openjdk-8-jdk openjdk-8-jre

# Install IB Gateway: Installs to ~/Jts
RUN wget http://cdn.quantconnect.com/interactive/ibgateway-latest-standalone-linux-x64-v974.4g.sh && \
    chmod 777 ibgateway-latest-standalone-linux-x64-v974.4g.sh && \
    ./ibgateway-latest-standalone-linux-x64-v974.4g.sh -q && \
    wget -O ~/Jts/jts.ini http://cdn.quantconnect.com/interactive/ibgateway-latest-standalone-linux-x64-v974.4g.jts.ini && \
    rm ibgateway-latest-standalone-linux-x64-v974.4g.sh

# Mono C# for LEAN:
# From https://github.com/mono/docker/blob/master/
RUN apt-get update && rm -rf /var/lib/apt/lists/*
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
RUN echo "deb http://download.mono-project.com/repo/ubuntu stable-xenial/snapshots/5.12.0.226 main" > /etc/apt/sources.list.d/mono-xamarin.list && \
    apt-get update && apt-get install -y binutils mono-complete ca-certificates-mono mono-vbnc nuget referenceassemblies-pcl && \
    apt-get install -y fsharp && rm -rf /var/lib/apt/lists/* /tmp/*

# Install miniconda
ENV CONDA="Miniconda3-4.5.12-Linux-x86_64.sh"
ENV PATH="/opt/miniconda3/bin:${PATH}"
RUN wget https://cdn.quantconnect.com/miniconda/${CONDA} && \
    bash ${CONDA} -b -p /opt/miniconda3 && rm -rf ${CONDA} && \
    ln -s /opt/miniconda3/lib/libpython3.6m.so /usr/lib/libpython3.6m.so

# Install supported third party python packages
RUN conda update -y conda pip
RUN conda install -y python=3.6.8
RUN conda install -y msgpack-python=0.5.6
RUN conda install -y numpy=1.16.1
RUN conda install -y pandas=0.23.4
RUN conda install -y wrapt=1.10.11
RUN conda install -y dill=0.2.9
RUN conda install -y jsonschema lxml
RUN conda install -y blaze cython cvxopt keras nltk tensorflow
RUN conda install -y -c pytorch pytorch torchvision
RUN conda install -y -c pytorch -c fastai nvidia-ml-py3 fastai
RUN conda install -y -c conda-forge rauth fbprophet
RUN conda install pomegranate
RUN pip install --upgrade pip
RUN pip install arch copulalib cvxpy deap gym pykalman pyro-ppl
RUN pip install sklearn statistics tensorforce xgboost theano
RUN pip install QuantLib-Python
RUN pip install copulas
RUN pip install --upgrade --user hmmlearn
RUN pip install tsfresh
RUN pip install lightgbm
RUN pip install beautifulsoup4
RUN pip install pyramid-arima
RUN pip install stable-baselines
RUN python -c "import nltk; nltk.download('punkt')"
RUN conda clean -y --all

# Install TA-lib for python
RUN wget http://cdn.quantconnect.com/ta-lib/ta-lib-0.4.0-src.tar.gz && \
    tar -zxvf ta-lib-0.4.0-src.tar.gz && cd ta-lib && \
    ./configure --prefix=/usr && make && make install && \
    pip install TA-lib

# Install DX Analytics
RUN git clone https://github.com/yhilpisch/dx.git && cd dx && \
    python setup.py install && cd .. && rm -irf dx

# Install py-earth
RUN git clone git://github.com/scikit-learn-contrib/py-earth.git && cd py-earth && \
    python setup.py install && cd .. && rm -irf py-earth

# List all packages
RUN conda list