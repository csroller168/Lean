<?xml version="1.0" encoding="utf-8"?>
<CommandTable xmlns="http://schemas.microsoft.com/VisualStudio/2005-10-18/CommandTable" xmlns:xs="http://www.w3.org/2001/XMLSchema">

  <!--This is the file that defines the IDs for all the commands exposed by VisualStudio. -->
  <Extern href="stdidcmd.h"/>

  <!--This header contains the command ids for the menus provided by the shell. -->
  <Extern href="vsshlids.h"/>

  

  <Commands package="guidSendForBacktestingcsPackage">
    <!--  Each element is identified by a command id that
    is a unique pair of guid and numeric identifier; the guid part of the identifier is usually
    called "command set" and is used to group different command inside a logically related
    group; your package should define its own command set in order to avoid collisions
    with command ids defined by other packages. -->

    


    <Groups>
      <Group guid="guidSendForBacktestingcsPackageCmdSet" id="MyMenuGroup" priority="0x0600">
        <Parent guid="guidSHLMainMenu" id="IDM_VS_CTXT_ITEMNODE"/>
      </Group>
    </Groups>


    <Buttons>
      <!--To define a menu group you have to specify its ID, the parent menu and its display priority.
          The command is visible and enabled by default. If you need to change the visibility, status, etc, you can use
          the CommandFlag node.
          You can add more than one CommandFlag node e.g.:
              <CommandFlag>DefaultInvisible</CommandFlag>
              <CommandFlag>DynamicVisibility</CommandFlag>
          If you do not want an image next to your command, remove the Icon node /> -->
      <Button guid="guidSendForBacktestingcsPackageCmdSet" id="SendForBacktestingcsId" priority="0x0100" type="Button">
        <Parent guid="guidSendForBacktestingcsPackageCmdSet" id="MyMenuGroup" />
        <Icon guid="guidImages" id="bmpPic1" />
        <Strings>
          <ButtonText>Send for backtesting</ButtonText>
        </Strings>
      </Button>
    </Buttons>


    <Bitmaps>
      <!--  The bitmap id is defined in a way that is a little bit different from the others:
            the declaration starts with a guid for the bitmap strip, then there is the resource id of the
            bitmap strip containing the bitmaps and then there are the numeric ids of the elements used
            inside a button definition. An important aspect of this declaration is that the element id
            must be the actual index (1-based) of the bitmap inside the bitmap strip. -->
      <Bitmap guid="guidImages" href="Resources\SendForBacktestingcs.png" usedList="bmpPic1, bmpPic2, bmpPicSearch, bmpPicX, bmpPicArrows, bmpPicStrikethrough"/>
    </Bitmaps>
  </Commands>

  <CommandPlacements>
    <CommandPlacement guid="guidSendForBacktestingcsPackageCmdSet" id="MyMenuGroup"  priority="0x0600">
      <Parent guid="guidSHLMainMenu" id="IDM_VS_CTXT_FOLDERNODE" />
    </CommandPlacement>
  </CommandPlacements>

  <Symbols>
    <!-- This is the package guid. -->
    <GuidSymbol name="guidSendForBacktestingcsPackage" value="{2c9c2f3d-2cc2-437f-928c-0ef5fdfcfed3}" />

    <!-- This is the guid used to group the menu commands together -->
    <GuidSymbol name="guidSendForBacktestingcsPackageCmdSet" value="{00ce2ccb-74c7-42f4-bf63-52c573fc1532}">
      <IDSymbol name="MyMenuGroup" value="0x1020" />
      <IDSymbol name="SendForBacktestingcsId" value="0x0100" />
    </GuidSymbol>

    <GuidSymbol name="guidImages" value="{d56082f1-cd48-41ec-a8df-0f5b9b3bfd4f}" >
      <IDSymbol name="bmpPic1" value="1" />
      <IDSymbol name="bmpPic2" value="2" />
      <IDSymbol name="bmpPicSearch" value="3" />
      <IDSymbol name="bmpPicX" value="4" />
      <IDSymbol name="bmpPicArrows" value="5" />
      <IDSymbol name="bmpPicStrikethrough" value="6" />
    </GuidSymbol>
  </Symbols>
</CommandTable>
